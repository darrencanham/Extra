.model small
.386
.stack 100H
.data
DATA1 dw 0000H
DATA2 dw 0000H
PROD1 dw ?
PROD2 dw ?
msg db 10,13,"Enter the first no.:: $"
msg1 db 10,13,"Enter the second no.:: $"
msg2 db 10,13,"The product(in hexadecimal) is :: $"
.code
.startup
MOV AH,09
MOV DX,OFFSET msg
INT 21H

MOV BX, 0
MOV CX, 4

AGAIN: MOV AH, 01 ;1ST NO. ENTERED
INT 21H
CMP AL,'A'
JGE L5
SUB AL,30H
JMP L6
L5: SUB AL,37H
L6: SHL BX,4
ADD BL,AL
LOOP AGAIN

MOV DATA1, BX
 
MOV AH,09
MOV DX,OFFSET msg1
INT 21H
MOV BX, 0
MOV CX, 4
AGAIN1: MOV AH, 01 ;2nd NO. ENTERED
INT 21H
CMP AL,'A'
JGE L7
SUB AL,30H
JMP L8
L7: SUB AL,37H
L8: SHL BX,4
ADD BL ,AL
LOOP AGAIN1

MOV DATA2, BX
MOV BX,0
MOV DX,0
MOV AX,0
MOV AX,DATA1
MOV BX,DATA2
MUL BX
MOV PROD1,DX
MOV PROD2,AX
MOV AH,09
MOV DX,OFFSET msg2
INT 21H
MOV BX, PROD1
MOV CX, 4
AGAIN2: ROL BX, 4
MOV DL, BL
AND DL, 0FH ; to o/p the result
CMP DL, 9
JBE L1
ADD DL, 37H
MOV AH, 02
INT 21H
JMP L2
L1: ADD DL,30H
MOV AH,02
INT 21H
L2: LOOP AGAIN2

MOV BX, PROD2
MOV CX, 4
AGAIN3: ROL BX, 4
MOV DL, BL
AND DL, 0FH ; to o/p the result
CMP DL,9
JBE L3
ADD DL,37H
MOV AH,02
INT 21H
JMP L4
L3: ADD DL,30H
MOV AH,02
INT 21H
L4: LOOP AGAIN3
.EXIT
END
